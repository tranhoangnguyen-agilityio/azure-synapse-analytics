{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "location": {
            "type": "String"
        },
        "workspaceName": {
            "type": "String",
            "metadata": "Synapse workspace name"
        },
        "storageAccountName": {
            "type": "String"
        },
        "gitHubAccount": {
            "type": "String",
            "metadata": "Synapse github account"
        },
        "repositoryName": {
            "type": "String",
            "metadata": "Synapse github repository name"
        },
        "collaborationBranch": {
            "type": "String",
            "metadata": "Synapse github collaboration branch"
        },
        "publishBranch": {
            "type": "String",
            "metadata": "Synapse github publish branch"
        },
        "dataSource_serverName": {
            "type": "String"
        },
        "dataSource_userName": {
            "type": "String"
        },
        "dataSource_password": {
            "type": "secureString"
        },
        "dataSource_databaseName": {
            "type": "String"
        },
        "storageRoleAssignmentId": {
            "type": "String",
            "metadata": "UUID for storage account role assignment",
            "defaultValue": "[newGuid()]"
        },
        "containerIdentityName": {
            "type": "String",
            "metadata": "The managed identity name for container group",
            "defaultValue": "containerIdentity"
        },
        "containerIdentityRoleAssignmentId": {
            "type": "String",
            "metadata": "The Role Assign Id when assign container Identity to workspace",
            "defaultValue": "[newGuid()]"
        },
        "vulnerabilityAssessmentContainer": {
            "type": "String",
            "metadata": "A blob storage container path to hold the scan results",
            "defaultValue": "vascans"
        },
        "managedResourceGroupNameSuffix": {
            "type": "String",
            "metadata": "An UUID suffix for properties Microsoft.Synapse/workspaces - properties.managedResourceGroupName",
            "defaultValue": "[newGuid()]"
        },
        "initialWorkspaceAdminObjectId": {
            "type": "String",
            "metadata": "An UUID Microsoft.Synapse/workspaces - initialWorkspaceAdminObjectId",
            "defaultValue": "[newGuid()]"
        }
    },
    "variables": {
        "workspaceId": "[concat('Microsoft.Synapse/workspaces/', parameters('workspaceName'))]",
        "workspacePrincipalId": "[extensionResourceId(resourceGroup().Id , 'Microsoft.Synapse/workspaces', parameters('workspaceName'))]",
        "Owner": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', '8e3af657-a8ff-443c-a75c-2fe8c4bcb635')]",
        "Contributor": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', 'b24988ac-6180-42a0-ab88-20f7382dd24c')]",
        "Reader": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', 'acdd72a7-3385-48ef-bd42-f606fba81ae7')]",
        "StorageAccountContributor": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', 'ba92f5b4-2d11-453d-a403-e96b0029c9fe')]",
        "storageAccounts_collectiv2410_externalid": "[extensionResourceId(resourceGroup().Id , 'Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
    },
    "resources": [
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2023-04-01",
            "name": "[parameters('storageAccountName')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "kind": "StorageV2",
            "properties": {
                "dnsEndpointType": "Standard",
                "defaultToOAuthAuthentication": false,
                "publicNetworkAccess": "Enabled",
                "allowCrossTenantReplication": false,
                "isSftpEnabled": false,
                "minimumTlsVersion": "TLS1_2",
                "allowBlobPublicAccess": false,
                "allowSharedKeyAccess": true,
                "largeFileSharesState": "Enabled",
                "isHnsEnabled": true,
                "networkAcls": {
                    "bypass": "AzureServices",
                    "virtualNetworkRules": [],
                    "ipRules": [],
                    "defaultAction": "Allow"
                },
                "supportsHttpsTrafficOnly": true,
                "encryption": {
                    "requireInfrastructureEncryption": false,
                    "services": {
                        "file": {
                            "keyType": "Account",
                            "enabled": true
                        },
                        "blob": {
                            "keyType": "Account",
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                },
                "accessTier": "Hot"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices",
            "apiVersion": "2023-04-01",
            "name": "[concat(parameters('storageAccountName'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
            ],
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "properties": {
                "containerDeleteRetentionPolicy": {
                    "enabled": true,
                    "days": 7
                },
                "cors": {
                    "corsRules": []
                },
                "deleteRetentionPolicy": {
                    "allowPermanentDelete": false,
                    "enabled": true,
                    "days": 7
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/fileServices",
            "apiVersion": "2023-04-01",
            "name": "[concat(parameters('storageAccountName'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
            ],
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "properties": {
                "protocolSettings": {
                    "smb": {}
                },
                "cors": {
                    "corsRules": []
                },
                "shareDeleteRetentionPolicy": {
                    "enabled": true,
                    "days": 7
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/queueServices",
            "apiVersion": "2023-04-01",
            "name": "[concat(parameters('storageAccountName'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
            ],
            "properties": {
                "cors": {
                    "corsRules": []
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/tableServices",
            "apiVersion": "2023-04-01",
            "name": "[concat(parameters('storageAccountName'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
            ],
            "properties": {
                "cors": {
                    "corsRules": []
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2023-04-01",
            "name": "[concat(parameters('storageAccountName'), '/default/bronze')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccountName'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
            ],
            "properties": {
                "defaultEncryptionScope": "$account-encryption-key",
                "denyEncryptionScopeOverride": false,
                "publicAccess": "None"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2023-04-01",
            "name": "[concat(parameters('storageAccountName'), '/default/gold')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccountName'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
            ],
            "properties": {
                "defaultEncryptionScope": "$account-encryption-key",
                "denyEncryptionScopeOverride": false,
                "publicAccess": "None"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2023-04-01",
            "name": "[concat(parameters('storageAccountName'), '/default/silver')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccountName'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
            ],
            "properties": {
                "defaultEncryptionScope": "$account-encryption-key",
                "denyEncryptionScopeOverride": false,
                "publicAccess": "None"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2023-04-01",
            "name": "[concat(parameters('storageAccountName'), '/default/', parameters('vulnerabilityAssessmentContainer'))]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccountName'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
            ],
            "properties": {
                "defaultEncryptionScope": "$account-encryption-key",
                "denyEncryptionScopeOverride": false,
                "publicAccess": "None"
            }
        },
        {
            "type": "Microsoft.Synapse/workspaces",
            "apiVersion": "2021-06-01",
            "name": "[parameters('workspaceName')]",
            "location": "[parameters('location')]",
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "defaultDataLakeStorage": {
                    "resourceId": "[variables('storageAccounts_collectiv2410_externalid')]",
                    "createManagedPrivateEndpoint": false,
                    "accountUrl": "[concat('https://', parameters('storageAccountName'), '.dfs.core.windows.net')]",
                    "filesystem": "[parameters('workspaceName')]"
                },
                "encryption": {},
                "managedResourceGroupName": "[concat('synapseworkspace-managedrg-', parameters('managedResourceGroupNameSuffix'))]",
                "sqlAdministratorLogin": "sqladminuser",
                "privateEndpointConnections": [],
                "publicNetworkAccess": "Enabled",
                "cspWorkspaceAdminProperties": {
                    "initialWorkspaceAdminObjectId": "[parameters('initialWorkspaceAdminObjectId')]"
                },
                "azureADOnlyAuthentication": false,
                "trustedServiceBypassEnabled": false,
                "workspaceRepositoryConfiguration": {
                    "accountName": "[parameters('gitHubAccount')]",
                    "collaborationBranch": "[parameters('collaborationBranch')]",
                    "repositoryName": "[parameters('repositoryName')]",
                    "rootFolder": "/",
                    "type": "WorkspaceGitHubConfiguration"
                  }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
            ]
        },
        {
            "type": "Microsoft.Synapse/workspaces/auditingSettings",
            "apiVersion": "2021-06-01",
            "name": "[concat(parameters('workspaceName'), '/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Synapse/workspaces', parameters('workspaceName'))]"
            ],
            "properties": {
                "retentionDays": 0,
                "auditActionsAndGroups": [],
                "isStorageSecondaryKeyInUse": false,
                "isAzureMonitorTargetEnabled": false,
                "state": "Disabled",
                "storageAccountSubscriptionId": "00000000-0000-0000-0000-000000000000"
            }
        },
        {
            "type": "Microsoft.Synapse/workspaces/azureADOnlyAuthentications",
            "apiVersion": "2021-06-01",
            "name": "[concat(parameters('workspaceName'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Synapse/workspaces', parameters('workspaceName'))]"
            ],
            "properties": {
                "azureADOnlyAuthentication": false
            }
        },
        {
            "name": "[concat(parameters('workspaceName'), '/collectivspark')]",
            "type": "Microsoft.Synapse/workspaces/bigDataPools",
            "apiVersion": "2019-06-01-preview",
            "properties": {
                "autoPause": {
                    "enabled": true,
                    "delayInMinutes": 15
                },
                "autoScale": {
                    "enabled": false,
                    "maxNodeCount": 10,
                    "minNodeCount": 3
                },
                "nodeCount": 3,
                "nodeSize": "Small",
                "nodeSizeFamily": "MemoryOptimized",
                "sparkVersion": "3.4",
                "isComputeIsolationEnabled": false,
                "sessionLevelPackagesEnabled": false,
                "annotations": []
            },
            "dependsOn": [
                "[resourceId('Microsoft.Synapse/workspaces', parameters('workspaceName'))]"
            ],
            "location": "[parameters('location')]"
        },
        {
            "type": "Microsoft.Synapse/workspaces/dedicatedSQLminimalTlsSettings",
            "apiVersion": "2021-06-01",
            "name": "[concat(parameters('workspaceName'), '/default')]",
            "location": "eastus",
            "dependsOn": [
                "[resourceId('Microsoft.Synapse/workspaces', parameters('workspaceName'))]"
            ],
            "properties": {
                "minimalTlsVersion": "1.2"
            }
        },
        {
            "type": "Microsoft.Synapse/workspaces/extendedAuditingSettings",
            "apiVersion": "2021-06-01",
            "name": "[concat(parameters('workspaceName'), '/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Synapse/workspaces', parameters('workspaceName'))]"
            ],
            "properties": {
                "retentionDays": 0,
                "auditActionsAndGroups": [],
                "isStorageSecondaryKeyInUse": false,
                "isAzureMonitorTargetEnabled": false,
                "state": "Disabled",
                "storageAccountSubscriptionId": "00000000-0000-0000-0000-000000000000"
            }
        },
        {
            "type": "Microsoft.Synapse/workspaces/firewallRules",
            "apiVersion": "2021-06-01",
            "name": "[concat(parameters('workspaceName'), '/allowAll')]",
            "dependsOn": [
                "[resourceId('Microsoft.Synapse/workspaces', parameters('workspaceName'))]"
            ],
            "properties": {
                "startIpAddress": "0.0.0.0",
                "endIpAddress": "255.255.255.255"
            }
        },
        {
            "type": "Microsoft.Synapse/workspaces/integrationruntimes",
            "apiVersion": "2021-06-01",
            "name": "[concat(parameters('workspaceName'), '/AutoResolveIntegrationRuntime')]",
            "dependsOn": [
                "[resourceId('Microsoft.Synapse/workspaces', parameters('workspaceName'))]"
            ],
            "properties": {
                "type": "Managed",
                "typeProperties": {
                    "computeProperties": {
                        "location": "AutoResolve"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Authorization/roleAssignments",
            "apiVersion": "2022-04-01",
            "name": "[parameters('storageRoleAssignmentId')]",
            "scope": "[concat('Microsoft.Storage/storageAccounts', '/', parameters('storageAccountName'))]",
            "properties": {
                "roleDefinitionId": "[variables('StorageAccountContributor')]",
                "principalId": "[reference(resourceId('Microsoft.Synapse/workspaces', parameters('workspaceName')), '2021-06-01', 'Full').identity.principalId]"
            }
        },
        {
            "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
            "apiVersion": "2023-07-31-preview",
            "name": "[parameters('containerIdentityName')]",
            "location": "[parameters('location')]"
        },
        {
            "type": "Microsoft.Authorization/roleAssignments",
            "apiVersion": "2022-04-01",
            "name": "[parameters('containerIdentityRoleAssignmentId')]",
            "scope": "[concat('Microsoft.Synapse/workspaces', '/', parameters('workspaceName'))]",
            "properties": {
                "roleDefinitionId": "[variables('Owner')]",
                "principalId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', 'containerIdentity'), '2023-01-31', 'Full').properties.principalId]"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Synapse/workspaces', parameters('workspaceName'))]",
                "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('containerIdentityName'))]"
            ]
        }
    ]
}